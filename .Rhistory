group_by(value) %>%
summarise(
RMSE = mean(rmse),
R2 = mean(R2)
) %>%
as.data.frame()
knitr::include_graphics("layers_2_rep_1.png")
knitr::include_graphics("layers_3_rep_0.png")
knitr::include_graphics("layers_4_rep_2.png")
knitr::include_graphics("layers_5_rep_1.png")
methods <- c("LSTM", "ARIMA")
RMSE <- c(5.0984, 1.8729)
R2 <- c(0.7806, 0.9715)
# Tworzenie tabeli
results <- data.frame(
Methods = methods,
RMSE = RMSE,
R2 = R2
)
results
optimizer %>%
group_by(Value) %>%
summarise(
RMSE = mean(RMSE),
R2 = mean(R2)
) %>%
as.data.frame()
methods <- c("LSTM art.", "ARIMA art.", "LSTM")
RMSE <- c(5.0984, 1.8729, 6.558908)
R2 <- c(0.7806, 0.9715, 0.9712344)
results <- data.frame(
Methods = methods,
RMSE = RMSE,
R2 = R2
)
results
methods <- c("LSTM", "ARIMA", "LSTM")
source <- c("Artykuł", "Artykuł", "Nasz wynik")
RMSE <- c(5.0984, 1.8729, 6.558908)
R2 <- c(0.7806, 0.9715, 0.9712344)
results <- data.frame(
Metoda = methods,
Źródło = source,
RMSE = RMSE,
R2 = R2
)
results
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
act <- activation %>%
group_by(Value) %>%
summarise(
RMSE = mean(RMSE),
R2 = mean(R2)
) %>%
as.data.frame()
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(dplyr)
library(cowplot)
library(ggplot2)
library(readr)
library(readxl)
database <- read_csv("msft_us_historical_data.csv")
split_index <- floor(0.8 * nrow(database))
split_date <- database$Date[split_index]
database %>%
ggplot()+
geom_line(aes(x = Date, y = Close)) +
geom_vline(xintercept = as.numeric(split_date), color = "red", linetype = "dashed", size = 1) +
theme_light(base_size = 15) +
labs( title= "Microsoft - notowania na giełdzie", y = "Cena zamknięcia", x = "Data")
neurons <- read_excel("results.xlsx", sheet = "neurons")
optimizer <- read_excel("results.xlsx", sheet = "optimizer")
activation <- read_excel("results.xlsx", sheet = "activation")
batch_size <- read_excel("results.xlsx", sheet = "batch_size")
layers <- read_excel("results.xlsx", sheet = "layers")
x <- seq(-10, 10, length.out = 500)
data <- data.frame(
x = rep(x, 4),
y = c(
x,                                        # h(x) = x
ifelse(x >= 0, x, 0),                    # h(x) = {x, x >= 0; 0, x < 0}
1 / (1 + exp(-x)),                   # h(x) = 1 / (1 + e^(-x))
2 / (1 + exp(-2 * x)) - 1                # h(x) = 2 / (1 + e^(-2x)) - 1
),
function_name = factor(rep(
c("f. liniowa",
"f. ReLU",
"f. sigmoidalna",
"f. tanh"),
each = length(x)
))
)
# Tworzenie wykresu
ggplot(data, aes(x = x, y = y, color = function_name)) +
geom_line(size = 1.2) +
labs(
title = "Wykres funkcji aktywacyjnych h(x)",
x = "x",
y = "h(x)",
color = "Funkcje"
) +
theme_light(base_size = 14) +
ylim(-1.5, 1.5)
knitr::include_graphics("activation_linear_rep_3.png")
knitr::include_graphics("activation_relu_rep_2.png")
knitr::include_graphics("activation_sigmoid_rep_4.png")
knitr::include_graphics("activation_tanh_rep_4.png")
act <- activation %>%
group_by(Value) %>%
summarise(
RMSE = mean(RMSE),
R2 = mean(R2)
) %>%
as.data.frame()
colnames(act) <- c("f.aktywacyjna", "RMSE", "$R^2$")
act
act
op <- optimizer %>%
group_by(Value) %>%
summarise(
RMSE = mean(RMSE),
R2 = mean(R2)
) %>%
as.data.frame()
colnames(op) <- c("Optymalizator", "RMSE", "R2")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(dplyr)
library(cowplot)
library(ggplot2)
library(readr)
library(readxl)
database <- read_csv("msft_us_historical_data.csv")
split_index <- floor(0.8 * nrow(database))
split_date <- database$Date[split_index]
database %>%
ggplot()+
geom_line(aes(x = Date, y = Close)) +
geom_vline(xintercept = as.numeric(split_date), color = "red", linetype = "dashed", size = 1) +
theme_light(base_size = 15) +
labs( title= "Microsoft - notowania na giełdzie", y = "Cena zamknięcia", x = "Data")
neurons <- read_excel("results.xlsx", sheet = "neurons")
optimizer <- read_excel("results.xlsx", sheet = "optimizer")
activation <- read_excel("results.xlsx", sheet = "activation")
batch_size <- read_excel("results.xlsx", sheet = "batch_size")
layers <- read_excel("results.xlsx", sheet = "layers")
x <- seq(-10, 10, length.out = 500)
data <- data.frame(
x = rep(x, 4),
y = c(
x,                                        # h(x) = x
ifelse(x >= 0, x, 0),                    # h(x) = {x, x >= 0; 0, x < 0}
1 / (1 + exp(-x)),                   # h(x) = 1 / (1 + e^(-x))
2 / (1 + exp(-2 * x)) - 1                # h(x) = 2 / (1 + e^(-2x)) - 1
),
function_name = factor(rep(
c("f. liniowa",
"f. ReLU",
"f. sigmoidalna",
"f. tanh"),
each = length(x)
))
)
# Tworzenie wykresu
ggplot(data, aes(x = x, y = y, color = function_name)) +
geom_line(size = 1.2) +
labs(
title = "Wykres funkcji aktywacyjnych h(x)",
x = "x",
y = "h(x)",
color = "Funkcje"
) +
theme_light(base_size = 14) +
ylim(-1.5, 1.5)
knitr::include_graphics("activation_linear_rep_3.png")
knitr::include_graphics("activation_relu_rep_2.png")
knitr::include_graphics("activation_sigmoid_rep_4.png")
knitr::include_graphics("activation_tanh_rep_4.png")
act <- activation %>%
group_by(Value) %>%
summarise(
RMSE = mean(RMSE),
R2 = mean(R2)
) %>%
as.data.frame()
colnames(act) <- c("f.aktywacyjna", "RMSE", "R2")
act
knitr::include_graphics("batch_size_16_rep_1.png")
knitr::include_graphics("batch_size_32_rep_1.png")
knitr::include_graphics("batch_size_64_rep_1.png")
knitr::include_graphics("batch_size_128_rep_1.png")
ba <- batch_size %>%
group_by(Value) %>%
summarise(
RMSE = mean(RMSE),
R2 = mean(R2)
) %>%
as.data.frame()
colnames(ba) <- c("Rozmiar partii", "RMSE", "R2")
ba
knitr::include_graphics("layers_2_rep_1.png")
knitr::include_graphics("layers_3_rep_0.png")
knitr::include_graphics("layers_4_rep_2.png")
knitr::include_graphics("layers_5_rep_1.png")
lay <- layers %>%
group_by(value) %>%
summarise(
RMSE = mean(rmse),
R2 = mean(R2)
) %>%
as.data.frame()
colnames(lay) <- c("Liczba warstw", "RMSE", "R2")
lay
knitr::include_graphics("neurons_50_rep_0.png")
knitr::include_graphics("neurons_100_rep_1.png")
knitr::include_graphics("neurons_150_rep_4.png")
knitr::include_graphics("neurons_200_rep_3.png")
ne <- neurons %>%
group_by(Value) %>%
summarise(
RMSE = mean(RMSE),
R2 = mean(R2)
) %>%
as.data.frame()
colnames(ne) <- c("Liczba neuronów", "RMSE", "R2")
methods <- c("LSTM", "ARIMA","GRU", "LSTM")
source <- c("Artykuł", "Artykuł", "Artykuł", "Nasz wynik")
RMSE <- c(5.0984, 1.8729,8.0805, 6.558908)
R2 <- c(0.7806, 0.9715,0.8319, 0.9712344)
results <- data.frame(
Metoda = methods,
Źródło = source,
methods <- c("LSTM", "ARIMA","GRU", "LSTM")
source <- c("Artykuł", "Artykuł", "Artykuł", "Nasz wynik")
RMSE <- c(5.0984, 1.8729,8.0805, 6.558908)
R2 <- c(0.7806, 0.9715,0.8319, 0.9712344)
results <- data.frame(
Metoda = methods,
Source = source,
RMSE = RMSE,
R2 = R2
)
results
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(dplyr)
library(cowplot)
library(ggplot2)
library(readr)
library(readxl)
database <- read_csv("msft_us_historical_data.csv")
split_index <- floor(0.8 * nrow(database))
split_date <- database$Date[split_index]
database %>%
ggplot()+
geom_line(aes(x = Date, y = Close)) +
geom_vline(xintercept = as.numeric(split_date), color = "red", linetype = "dashed", size = 1) +
theme_light(base_size = 15) +
labs( title= "Microsoft - notowania na giełdzie", y = "Cena zamknięcia", x = "Data")
neurons <- read_excel("results.xlsx", sheet = "neurons")
optimizer <- read_excel("results.xlsx", sheet = "optimizer")
activation <- read_excel("results.xlsx", sheet = "activation")
batch_size <- read_excel("results.xlsx", sheet = "batch_size")
layers <- read_excel("results.xlsx", sheet = "layers")
x <- seq(-10, 10, length.out = 500)
data <- data.frame(
x = rep(x, 4),
y = c(
x,                                        # h(x) = x
ifelse(x >= 0, x, 0),                    # h(x) = {x, x >= 0; 0, x < 0}
1 / (1 + exp(-x)),                   # h(x) = 1 / (1 + e^(-x))
2 / (1 + exp(-2 * x)) - 1                # h(x) = 2 / (1 + e^(-2x)) - 1
),
function_name = factor(rep(
c("f. liniowa",
"f. ReLU",
"f. sigmoidalna",
"f. tanh"),
each = length(x)
))
)
# Tworzenie wykresu
ggplot(data, aes(x = x, y = y, color = function_name)) +
geom_line(size = 1.2) +
labs(
title = "Wykres funkcji aktywacyjnych h(x)",
x = "x",
y = "h(x)",
color = "Funkcje"
) +
theme_light(base_size = 14) +
ylim(-1.5, 1.5)
knitr::include_graphics("activation_linear_rep_3.png")
knitr::include_graphics("activation_relu_rep_2.png")
knitr::include_graphics("activation_sigmoid_rep_4.png")
knitr::include_graphics("activation_tanh_rep_4.png")
act <- activation %>%
group_by(Value) %>%
summarise(
RMSE = mean(RMSE),
R2 = mean(R2)
) %>%
as.data.frame()
colnames(act) <- c("f.aktywacyjna", "RMSE", "R2")
act
knitr::include_graphics("batch_size_16_rep_1.png")
knitr::include_graphics("batch_size_32_rep_1.png")
knitr::include_graphics("batch_size_64_rep_1.png")
knitr::include_graphics("batch_size_128_rep_1.png")
ba <- batch_size %>%
group_by(Value) %>%
summarise(
RMSE = mean(RMSE),
R2 = mean(R2)
) %>%
as.data.frame()
colnames(ba) <- c("Rozmiar partii", "RMSE", "R2")
ba
knitr::include_graphics("layers_2_rep_1.png")
knitr::include_graphics("layers_3_rep_0.png")
knitr::include_graphics("layers_4_rep_2.png")
knitr::include_graphics("layers_5_rep_1.png")
lay <- layers %>%
group_by(value) %>%
summarise(
RMSE = mean(rmse),
R2 = mean(R2)
) %>%
as.data.frame()
colnames(lay) <- c("Liczba warstw", "RMSE", "R2")
lay
knitr::include_graphics("neurons_50_rep_0.png")
knitr::include_graphics("neurons_100_rep_1.png")
knitr::include_graphics("neurons_150_rep_4.png")
knitr::include_graphics("neurons_200_rep_3.png")
ne <- neurons %>%
group_by(Value) %>%
summarise(
RMSE = mean(RMSE),
R2 = mean(R2)
) %>%
as.data.frame()
colnames(ne) <- c("Liczba neuronów", "RMSE", "R2")
methods <- c("LSTM", "ARIMA", "LSTM")
source <- c("Artykuł", "Artykuł", "Nasz wynik")
RMSE <- c(5.0984, 1.8729, 6.558908)
R2 <- c(0.7806, 0.9715, 0.9712344)
results <- data.frame(
Metoda = methods,
Źródło = source,
View(act)
View(act)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
act <- activation %>%
summarise(
RMSE = RMSE,
R2 = R2
) %>%
as.data.frame()
library(dplyr)
library(cowplot)
library(ggplot2)
library(readr)
library(readxl)
database <- read_csv("msft_us_historical_data.csv")
act <- activation %>%
summarise(
RMSE = RMSE,
R2 = R2
) %>%
as.data.frame()
colnames(act) <- c("f.aktywacyjna", "RMSE", "R2")
View(act)
act <- activation %>%
select(Value) %>%
summarise(
RMSE = RMSE,
R2 = R2
) %>%
as.data.frame()
colnames(act) <- c("f.aktywacyjna", "RMSE", "R2")
View(act)
act <- activation %>%
select(Value, RMSE, R2) %>%
as.data.frame()
colnames(act) <- c("f.aktywacyjna", "RMSE", "R2")
act
act1 <- activation %>%
group_by(Value) %>%
summarise(
Min = min(RMSE)
)
as.data.frame()
View(act1)
act1 <- activation %>%
group_by(Value) %>%
summarise(
MinRMSE = min(RMSE),
R2 = R2
)
as.data.frame()
View(act1)
act1 <- activation %>%
group_by(Value) %>%
summarise(
MinRMSE = min(RMSE),
R2 = R2
)
as.data.frame()
act1 <- activation %>%
group_by(Value) %>%
summarise(
MinRMSE = min(RMSE),
R2 = R2
)
colnames(act1) <- c("f.aktywacyjna", "RMSE", "R2")
act1
act1 <- activation %>%
group_by(Value) %>%
summarise(
MinRMSE = min(RMSE),
R2 = max(R2)
)
colnames(act1) <- c("f.aktywacyjna", "RMSE", "R2")
act1
act1 <- activation %>%
group_by(Value) %>%
summarise(
MinRMSE = min(RMSE)
)
colnames(act1) <- c("f.aktywacyjna", "RMSE", "R2")
act1
act1 %>%
select(Value, RMSE, R2)
act1 <- activation %>%
group_by(Value) %>%
summarise(
MinRMSE = min(RMSE)
)
colnames(act1) <- c("f.aktywacyjna", "RMSE", "R2")
act1 %>%
select(Value, RMSE, R2)
View(act1)
act1 <- activation %>%
select(Value, RMSE, R2) %>%
group_by(Value) %>%
summarise(
MinRMSE = min(RMSE)
)
colnames(act1) <- c("f.aktywacyjna", "RMSE", "R2")
act1 %>%
act1 <- activation %>%
select(Value, RMSE, R2) %>%
group_by(Value) %>%
summarise(
MinRMSE = min(RMSE)
)
colnames(act1) <- c("f.aktywacyjna", "RMSE", "R2")
act1
act1 <- activation %>%
select(Value, RMSE, R2) %>%
group_by(Value) %>%
summarise(
MinRMSE = min(RMSE)
)
act1 <- activation %>%
select(Value, RMSE, R2) %>%
group_by(Value) %>%
summarise(
MinRMSE = min(RMSE)
)
minimalne_rmse <- activation %>%
group_by(Value) %>%
filter(RMSE == min(RMSE)) %>%
ungroup()
minimalne_rmse
View(activation)
minimalne_rmse1 %>%
group_by(Value) %>%
filter(RMSE == min(RMSE)) %>%
ungroup()
minimalne_rmse <- batch_size %>%
group_by(Value) %>%
filter(RMSE == min(RMSE)) %>%
ungroup()
minimalne_rmse
batch_size
minimalne_rmse2 <- layers %>%
group_by(Value) %>%
filter(RMSE == min(RMSE)) %>%
ungroup()
minimalne_rmse <- layers %>%
group_by(value) %>%
filter(rmse == min(rmse)) %>%
ungroup()
minimalne_rmse
View(layers)
minimalne_rmse <- neurons %>%
group_by(Value) %>%
filter(RMSE == min(RMSE)) %>%
ungroup()
minimalne_rmse
minimalne_rmse4 <- neurons %>%
group_by(Value) %>%
filter(RMSE == min(RMSE)) %>%
ungroup()
minimalne_rmse4
View(neurons)
minimalne_rmse5 <- optimizer %>%
group_by(Value) %>%
filter(RMSE == min(RMSE)) %>%
ungroup()
minimalne_rmse5
View(optimizer)
